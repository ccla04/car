ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.move,"ax",%progbits
  16              		.align	1
  17              		.global	move
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	move:
  25              	.LVL0:
  26              	.LFB65:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** void move(int speed) {
  28              		.loc 1 37 22 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 37 22 is_stmt 0 view .LVU1
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  38:Core/Src/main.c ****   if (speed>0) {
  40              		.loc 1 38 3 is_stmt 1 view .LVU2
  41              		.loc 1 38 6 is_stmt 0 view .LVU3
  42 0002 041E     		subs	r4, r0, #0
  43 0004 1ADD     		ble	.L2
  39:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 0);
  44              		.loc 1 39 5 is_stmt 1 view .LVU4
  45 0006 1B4D     		ldr	r5, .L5
  46 0008 0022     		movs	r2, #0
  47 000a 0821     		movs	r1, #8
  48 000c 2846     		mov	r0, r5
  49              	.LVL1:
  50              		.loc 1 39 5 is_stmt 0 view .LVU5
  51 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
  52              	.LVL2:
  40:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
  53              		.loc 1 40 5 is_stmt 1 view .LVU6
  54 0012 0122     		movs	r2, #1
  55 0014 1021     		movs	r1, #16
  56 0016 2846     		mov	r0, r5
  57 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
  58              	.LVL3:
  41:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
  59              		.loc 1 41 5 view .LVU7
  60 001c 0022     		movs	r2, #0
  61 001e 4FF40051 		mov	r1, #8192
  62 0022 2846     		mov	r0, r5
  63 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  64              	.LVL4:
  42:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, 1);
  65              		.loc 1 42 5 view .LVU8
  66 0028 0122     		movs	r2, #1
  67 002a 4FF48041 		mov	r1, #16384
  68 002e 2846     		mov	r0, r5
  69 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL5:
  43:Core/Src/main.c ****     TIM1->CCR4 = speed;
  71              		.loc 1 43 5 view .LVU9
  72              		.loc 1 43 16 is_stmt 0 view .LVU10
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 3


  73 0034 104B     		ldr	r3, .L5+4
  74 0036 1C64     		str	r4, [r3, #64]
  44:Core/Src/main.c ****     TIM1->CCR1 = speed;
  75              		.loc 1 44 5 is_stmt 1 view .LVU11
  76              		.loc 1 44 16 is_stmt 0 view .LVU12
  77 0038 5C63     		str	r4, [r3, #52]
  78              	.LVL6:
  79              	.L1:
  45:Core/Src/main.c ****   } else {
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3, 1);
  47:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 0);
  48:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 1);
  49:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, 0);
  50:Core/Src/main.c ****     TIM1->CCR4 = -speed;
  51:Core/Src/main.c ****     TIM1->CCR1 = -speed;
  52:Core/Src/main.c ****   }
  53:Core/Src/main.c **** }
  80              		.loc 1 53 1 view .LVU13
  81 003a 38BD     		pop	{r3, r4, r5, pc}
  82              	.LVL7:
  83              	.L2:
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 0);
  84              		.loc 1 46 5 is_stmt 1 view .LVU14
  85 003c 0D4D     		ldr	r5, .L5
  86 003e 0122     		movs	r2, #1
  87 0040 0821     		movs	r1, #8
  88 0042 2846     		mov	r0, r5
  89              	.LVL8:
  46:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 0);
  90              		.loc 1 46 5 is_stmt 0 view .LVU15
  91 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL9:
  47:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 1);
  93              		.loc 1 47 5 is_stmt 1 view .LVU16
  94 0048 0022     		movs	r2, #0
  95 004a 1021     		movs	r1, #16
  96 004c 2846     		mov	r0, r5
  97 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL10:
  48:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, 0);
  99              		.loc 1 48 5 view .LVU17
 100 0052 0122     		movs	r2, #1
 101 0054 4FF40051 		mov	r1, #8192
 102 0058 2846     		mov	r0, r5
 103 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL11:
  49:Core/Src/main.c ****     TIM1->CCR4 = -speed;
 105              		.loc 1 49 5 view .LVU18
 106 005e 0022     		movs	r2, #0
 107 0060 4FF48041 		mov	r1, #16384
 108 0064 2846     		mov	r0, r5
 109 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL12:
  50:Core/Src/main.c ****     TIM1->CCR1 = -speed;
 111              		.loc 1 50 5 view .LVU19
  50:Core/Src/main.c ****     TIM1->CCR1 = -speed;
 112              		.loc 1 50 18 is_stmt 0 view .LVU20
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 4


 113 006a 6442     		rsbs	r4, r4, #0
 114              	.LVL13:
  50:Core/Src/main.c ****     TIM1->CCR1 = -speed;
 115              		.loc 1 50 16 view .LVU21
 116 006c 024B     		ldr	r3, .L5+4
 117 006e 1C64     		str	r4, [r3, #64]
  51:Core/Src/main.c ****   }
 118              		.loc 1 51 5 is_stmt 1 view .LVU22
  51:Core/Src/main.c ****   }
 119              		.loc 1 51 16 is_stmt 0 view .LVU23
 120 0070 5C63     		str	r4, [r3, #52]
 121              		.loc 1 53 1 view .LVU24
 122 0072 E2E7     		b	.L1
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 0074 000C0140 		.word	1073810432
 127 0078 002C0140 		.word	1073818624
 128              		.cfi_endproc
 129              	.LFE65:
 131              		.section	.text.Error_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	Error_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	Error_Handler:
 140              	.LFB68:
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN PM */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PM */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** uint8_t uartdata[8];
  66:Core/Src/main.c **** int last_tick=0;
  67:Core/Src/main.c **** // uint16_t last_yaw_angle = 0;
  68:Core/Src/main.c **** // uint16_t last_roll_angle = 0;
  69:Core/Src/main.c **** // uint16_t yaw_angle = 0;
  70:Core/Src/main.c **** // uint16_t roll_angle = 0;
  71:Core/Src/main.c **** int pitch_angle = 0;
  72:Core/Src/main.c **** int pitch_corrected = 0;
  73:Core/Src/main.c **** int pitch_p_diff = 0;
  74:Core/Src/main.c **** int pitch_offset = 0;
  75:Core/Src/main.c **** int time_diff = 0;
  76:Core/Src/main.c **** // int pitch_last_p=0;
  77:Core/Src/main.c **** // int pitch_p=0;
  78:Core/Src/main.c **** // int pitch_i=0;
  79:Core/Src/main.c **** // int pitch_d=0;
  80:Core/Src/main.c **** // int left_i = 0;
  81:Core/Src/main.c **** // int left_d = 0;
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 5


  82:Core/Src/main.c **** // int right_i = 0;
  83:Core/Src/main.c **** // int right_d = 0;
  84:Core/Src/main.c **** struct motor {
  85:Core/Src/main.c ****   int encoder_val;
  86:Core/Src/main.c ****   int last_speed;
  87:Core/Src/main.c ****   int current_speed;
  88:Core/Src/main.c ****   int encoder_last_val;
  89:Core/Src/main.c **** };
  90:Core/Src/main.c **** struct motor motor_left;
  91:Core/Src/main.c **** struct motor motor_right;
  92:Core/Src/main.c **** struct pid {
  93:Core/Src/main.c ****   int last_p;
  94:Core/Src/main.c ****   int p;
  95:Core/Src/main.c ****   float kp;
  96:Core/Src/main.c ****   int i;
  97:Core/Src/main.c ****   float ki;
  98:Core/Src/main.c ****   int d;
  99:Core/Src/main.c ****   float kd;
 100:Core/Src/main.c **** };
 101:Core/Src/main.c **** struct pid pitch = {.last_p = 0, .i = 0, .kp = 0.14, .ki = 0.0, .kd = 200};
 102:Core/Src/main.c **** struct pid motor_speed =  {.last_p = 0, .i = 0, .kp = 40, .ki = 0.006, .kd = 1};
 103:Core/Src/main.c **** int velo = 0;
 104:Core/Src/main.c **** /* USER CODE END PV */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 107:Core/Src/main.c **** void SystemClock_Config(void);
 108:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* USER CODE END PFP */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 113:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* USER CODE END 0 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief  The application entry point.
 119:Core/Src/main.c ****   * @retval int
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** int main(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END 1 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 130:Core/Src/main.c ****   HAL_Init();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END Init */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Configure the system clock */
 137:Core/Src/main.c ****   SystemClock_Config();
 138:Core/Src/main.c **** 
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 6


 139:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END SysInit */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Initialize all configured peripherals */
 144:Core/Src/main.c ****   MX_GPIO_Init();
 145:Core/Src/main.c ****   MX_TIM1_Init();
 146:Core/Src/main.c ****   MX_TIM2_Init();
 147:Core/Src/main.c ****   MX_TIM3_Init();
 148:Core/Src/main.c ****   MX_USART2_UART_Init();
 149:Core/Src/main.c ****   MX_TIM4_Init();
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 151:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 152:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_4);
 153:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 154:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 157:Core/Src/main.c ****   HAL_Delay(3000);
 158:Core/Src/main.c ****   /* USER CODE END 2 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* Infinite loop */
 161:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 162:Core/Src/main.c ****   while (1)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     /* USER CODE END WHILE */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 167:Core/Src/main.c ****       //Below is the pid
 168:Core/Src/main.c ****       // move_l(1000);
 169:Core/Src/main.c ****       // move_r(1000);
 170:Core/Src/main.c ****       while (pitch_offset == 0)
 171:Core/Src/main.c ****       {
 172:Core/Src/main.c ****           HAL_UART_Receive_IT(&huart2, uartdata, 8);
 173:Core/Src/main.c ****           pitch_offset = pitch_angle;
 174:Core/Src/main.c ****       }
 175:Core/Src/main.c ****       while (1) {
 176:Core/Src/main.c ****         //encode start
 177:Core/Src/main.c ****         motor_left.encoder_val = __HAL_TIM_GET_COUNTER(&htim2);
 178:Core/Src/main.c ****         motor_left.current_speed = motor_left.encoder_val - motor_left.encoder_last_val;
 179:Core/Src/main.c ****         motor_left.encoder_last_val = motor_left.encoder_val;
 180:Core/Src/main.c ****         motor_right.encoder_val = __HAL_TIM_GET_COUNTER(&htim3);
 181:Core/Src/main.c ****         motor_right.current_speed = motor_right.encoder_val - motor_right.encoder_last_val;
 182:Core/Src/main.c ****         motor_right.encoder_last_val = motor_right.encoder_val;
 183:Core/Src/main.c ****         //encoder end
 184:Core/Src/main.c ****         HAL_UART_Receive_IT(&huart2, uartdata, 8);
 185:Core/Src/main.c ****         pitch_corrected = pitch_angle-pitch_offset;
 186:Core/Src/main.c ****         if (pitch_corrected > (33000)) {pitch_corrected -= 66000;}
 187:Core/Src/main.c ****         pitch.p = pitch_corrected;
 188:Core/Src/main.c ****         pitch_p_diff = pitch.p - pitch.last_p;
 189:Core/Src/main.c ****         time_diff = HAL_GetTick() - last_tick;
 190:Core/Src/main.c ****         pitch.d = (pitch.p - pitch.last_p)/*/((HAL_GetTick() - last_tick)*0.001)*/;
 191:Core/Src/main.c ****         if (pitch.i+pitch.p<=5000 && pitch.i+pitch.p>=-5000) {
 192:Core/Src/main.c ****           pitch.i += pitch.p*0.05;
 193:Core/Src/main.c ****         } else if (pitch.i+pitch.p>0) {pitch.i = 5000;}
 194:Core/Src/main.c ****         else {pitch.i = -5000;}
 195:Core/Src/main.c ****         motor_speed.p = -(motor_left.current_speed + motor_right.current_speed)/2;
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 7


 196:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 197:Core/Src/main.c ****           motor_speed.i += motor_speed.p;
 198:Core/Src/main.c ****         } else if (motor_speed.i+motor_speed.p>0) {motor_speed.i = 5000;}
 199:Core/Src/main.c ****         else {motor_speed.i = -5000;}
 200:Core/Src/main.c ****         motor_speed.d = (motor_speed.p - motor_speed.last_p)/((HAL_GetTick()-last_tick)*0.001);
 201:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 202:Core/Src/main.c ****         move(velo);
 203:Core/Src/main.c ****         pitch.last_p = pitch.p;
 204:Core/Src/main.c ****         motor_speed.last_p = motor_speed.p;
 205:Core/Src/main.c ****         last_tick = HAL_GetTick();
 206:Core/Src/main.c ****         HAL_Delay(5);
 207:Core/Src/main.c ****       }
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE END 3 */
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief System Clock Configuration
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** void SystemClock_Config(void)
 217:Core/Src/main.c **** {
 218:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 219:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 222:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 225:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****     Error_Handler();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 240:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 246:Core/Src/main.c ****   {
 247:Core/Src/main.c ****     Error_Handler();
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c **** }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 252:Core/Src/main.c **** 
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 8


 253:Core/Src/main.c **** /* USER CODE END 4 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /**
 256:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 257:Core/Src/main.c ****   * @retval None
 258:Core/Src/main.c ****   */
 259:Core/Src/main.c **** void Error_Handler(void)
 260:Core/Src/main.c **** {
 141              		.loc 1 260 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ Volatile: function does not return.
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 261:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 262:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 263:Core/Src/main.c ****   __disable_irq();
 147              		.loc 1 263 3 view .LVU26
 148              	.LBB4:
 149              	.LBI4:
 150              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 9


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 10


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 151              		.loc 2 140 27 view .LVU27
 152              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 153              		.loc 2 142 3 view .LVU28
 154              		.syntax unified
 155              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 156 0000 72B6     		cpsid i
 157              	@ 0 "" 2
 158              		.thumb
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 11


 159              		.syntax unified
 160              	.L8:
 161              	.LBE5:
 162              	.LBE4:
 264:Core/Src/main.c ****   while (1)
 163              		.loc 1 264 3 discriminator 1 view .LVU29
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****   }
 164              		.loc 1 266 3 discriminator 1 view .LVU30
 165 0002 FEE7     		b	.L8
 166              		.cfi_endproc
 167              	.LFE68:
 169              		.section	.text.SystemClock_Config,"ax",%progbits
 170              		.align	1
 171              		.global	SystemClock_Config
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	SystemClock_Config:
 178              	.LFB67:
 217:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179              		.loc 1 217 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 64
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 00B5     		push	{lr}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 14, -4
 187 0002 91B0     		sub	sp, sp, #68
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 72
 218:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 190              		.loc 1 218 3 view .LVU32
 218:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191              		.loc 1 218 22 is_stmt 0 view .LVU33
 192 0004 0023     		movs	r3, #0
 193 0006 0893     		str	r3, [sp, #32]
 194 0008 0993     		str	r3, [sp, #36]
 195 000a 0B93     		str	r3, [sp, #44]
 196 000c 0C93     		str	r3, [sp, #48]
 219:Core/Src/main.c **** 
 197              		.loc 1 219 3 is_stmt 1 view .LVU34
 219:Core/Src/main.c **** 
 198              		.loc 1 219 22 is_stmt 0 view .LVU35
 199 000e 0193     		str	r3, [sp, #4]
 200 0010 0293     		str	r3, [sp, #8]
 201 0012 0393     		str	r3, [sp, #12]
 202 0014 0493     		str	r3, [sp, #16]
 203 0016 0593     		str	r3, [sp, #20]
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 204              		.loc 1 224 3 is_stmt 1 view .LVU36
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 205              		.loc 1 224 36 is_stmt 0 view .LVU37
 206 0018 0122     		movs	r2, #1
 207 001a 0692     		str	r2, [sp, #24]
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 12


 225:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 208              		.loc 1 225 3 is_stmt 1 view .LVU38
 225:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 209              		.loc 1 225 30 is_stmt 0 view .LVU39
 210 001c 4FF48033 		mov	r3, #65536
 211 0020 0793     		str	r3, [sp, #28]
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 212              		.loc 1 226 3 is_stmt 1 view .LVU40
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 213              		.loc 1 227 3 view .LVU41
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214              		.loc 1 227 30 is_stmt 0 view .LVU42
 215 0022 0A92     		str	r2, [sp, #40]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 216              		.loc 1 228 3 is_stmt 1 view .LVU43
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 217              		.loc 1 228 34 is_stmt 0 view .LVU44
 218 0024 0222     		movs	r2, #2
 219 0026 0D92     		str	r2, [sp, #52]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 220              		.loc 1 229 3 is_stmt 1 view .LVU45
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 221              		.loc 1 229 35 is_stmt 0 view .LVU46
 222 0028 0E93     		str	r3, [sp, #56]
 230:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 223              		.loc 1 230 3 is_stmt 1 view .LVU47
 230:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 224              		.loc 1 230 32 is_stmt 0 view .LVU48
 225 002a 4FF4E013 		mov	r3, #1835008
 226 002e 0F93     		str	r3, [sp, #60]
 231:Core/Src/main.c ****   {
 227              		.loc 1 231 3 is_stmt 1 view .LVU49
 231:Core/Src/main.c ****   {
 228              		.loc 1 231 7 is_stmt 0 view .LVU50
 229 0030 06A8     		add	r0, sp, #24
 230 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 231              	.LVL14:
 231:Core/Src/main.c ****   {
 232              		.loc 1 231 6 view .LVU51
 233 0036 80B9     		cbnz	r0, .L13
 238:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 234              		.loc 1 238 3 is_stmt 1 view .LVU52
 238:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 235              		.loc 1 238 31 is_stmt 0 view .LVU53
 236 0038 0F23     		movs	r3, #15
 237 003a 0193     		str	r3, [sp, #4]
 240:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238              		.loc 1 240 3 is_stmt 1 view .LVU54
 240:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 239              		.loc 1 240 34 is_stmt 0 view .LVU55
 240 003c 0221     		movs	r1, #2
 241 003e 0291     		str	r1, [sp, #8]
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 242              		.loc 1 241 3 is_stmt 1 view .LVU56
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 243              		.loc 1 241 35 is_stmt 0 view .LVU57
 244 0040 0023     		movs	r3, #0
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 13


 245 0042 0393     		str	r3, [sp, #12]
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 246              		.loc 1 242 3 is_stmt 1 view .LVU58
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 247              		.loc 1 242 36 is_stmt 0 view .LVU59
 248 0044 4FF48062 		mov	r2, #1024
 249 0048 0492     		str	r2, [sp, #16]
 243:Core/Src/main.c **** 
 250              		.loc 1 243 3 is_stmt 1 view .LVU60
 243:Core/Src/main.c **** 
 251              		.loc 1 243 36 is_stmt 0 view .LVU61
 252 004a 0593     		str	r3, [sp, #20]
 245:Core/Src/main.c ****   {
 253              		.loc 1 245 3 is_stmt 1 view .LVU62
 245:Core/Src/main.c ****   {
 254              		.loc 1 245 7 is_stmt 0 view .LVU63
 255 004c 01A8     		add	r0, sp, #4
 256 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 257              	.LVL15:
 245:Core/Src/main.c ****   {
 258              		.loc 1 245 6 view .LVU64
 259 0052 20B9     		cbnz	r0, .L14
 249:Core/Src/main.c **** 
 260              		.loc 1 249 1 view .LVU65
 261 0054 11B0     		add	sp, sp, #68
 262              	.LCFI3:
 263              		.cfi_remember_state
 264              		.cfi_def_cfa_offset 4
 265              		@ sp needed
 266 0056 5DF804FB 		ldr	pc, [sp], #4
 267              	.L13:
 268              	.LCFI4:
 269              		.cfi_restore_state
 233:Core/Src/main.c ****   }
 270              		.loc 1 233 5 is_stmt 1 view .LVU66
 271 005a FFF7FEFF 		bl	Error_Handler
 272              	.LVL16:
 273              	.L14:
 247:Core/Src/main.c ****   }
 274              		.loc 1 247 5 view .LVU67
 275 005e FFF7FEFF 		bl	Error_Handler
 276              	.LVL17:
 277              		.cfi_endproc
 278              	.LFE67:
 280              		.global	__aeabi_i2d
 281              		.global	__aeabi_dmul
 282              		.global	__aeabi_dadd
 283              		.global	__aeabi_d2iz
 284              		.global	__aeabi_ui2d
 285              		.global	__aeabi_ddiv
 286              		.global	__aeabi_i2f
 287              		.global	__aeabi_fmul
 288              		.global	__aeabi_fadd
 289              		.global	__aeabi_f2d
 290              		.section	.text.main,"ax",%progbits
 291              		.align	1
 292              		.global	main
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 14


 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	main:
 299              	.LFB66:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 300              		.loc 1 122 1 view -0
 301              		.cfi_startproc
 302              		@ Volatile: function does not return.
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              	.LCFI5:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 130:Core/Src/main.c **** 
 310              		.loc 1 130 3 view .LVU69
 311 0002 FFF7FEFF 		bl	HAL_Init
 312              	.LVL18:
 137:Core/Src/main.c **** 
 313              		.loc 1 137 3 view .LVU70
 314 0006 FFF7FEFF 		bl	SystemClock_Config
 315              	.LVL19:
 144:Core/Src/main.c ****   MX_TIM1_Init();
 316              		.loc 1 144 3 view .LVU71
 317 000a FFF7FEFF 		bl	MX_GPIO_Init
 318              	.LVL20:
 145:Core/Src/main.c ****   MX_TIM2_Init();
 319              		.loc 1 145 3 view .LVU72
 320 000e FFF7FEFF 		bl	MX_TIM1_Init
 321              	.LVL21:
 146:Core/Src/main.c ****   MX_TIM3_Init();
 322              		.loc 1 146 3 view .LVU73
 323 0012 FFF7FEFF 		bl	MX_TIM2_Init
 324              	.LVL22:
 147:Core/Src/main.c ****   MX_USART2_UART_Init();
 325              		.loc 1 147 3 view .LVU74
 326 0016 FFF7FEFF 		bl	MX_TIM3_Init
 327              	.LVL23:
 148:Core/Src/main.c ****   MX_TIM4_Init();
 328              		.loc 1 148 3 view .LVU75
 329 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 330              	.LVL24:
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 331              		.loc 1 149 3 view .LVU76
 332 001e FFF7FEFF 		bl	MX_TIM4_Init
 333              	.LVL25:
 151:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_4);
 334              		.loc 1 151 3 view .LVU77
 335 0022 9B4C     		ldr	r4, .L27+16
 336 0024 0021     		movs	r1, #0
 337 0026 2046     		mov	r0, r4
 338 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 339              	.LVL26:
 152:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 15


 340              		.loc 1 152 3 view .LVU78
 341 002c 0C21     		movs	r1, #12
 342 002e 2046     		mov	r0, r4
 343 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 344              	.LVL27:
 153:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 345              		.loc 1 153 3 view .LVU79
 346 0034 3C21     		movs	r1, #60
 347 0036 9748     		ldr	r0, .L27+20
 348 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 349              	.LVL28:
 154:Core/Src/main.c **** 
 350              		.loc 1 154 3 view .LVU80
 351 003c 3C21     		movs	r1, #60
 352 003e 9648     		ldr	r0, .L27+24
 353 0040 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 354              	.LVL29:
 156:Core/Src/main.c ****   HAL_Delay(3000);
 355              		.loc 1 156 3 view .LVU81
 356 0044 9548     		ldr	r0, .L27+28
 357 0046 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 358              	.LVL30:
 157:Core/Src/main.c ****   /* USER CODE END 2 */
 359              		.loc 1 157 3 view .LVU82
 360 004a 40F6B830 		movw	r0, #3000
 361 004e FFF7FEFF 		bl	HAL_Delay
 362              	.LVL31:
 162:Core/Src/main.c ****   {
 363              		.loc 1 162 3 view .LVU83
 170:Core/Src/main.c ****       {
 364              		.loc 1 170 7 view .LVU84
 170:Core/Src/main.c ****       {
 365              		.loc 1 170 13 is_stmt 0 view .LVU85
 366 0052 08E0     		b	.L16
 367              	.L17:
 172:Core/Src/main.c ****           pitch_offset = pitch_angle;
 368              		.loc 1 172 11 is_stmt 1 view .LVU86
 369 0054 0822     		movs	r2, #8
 370 0056 9249     		ldr	r1, .L27+32
 371 0058 9248     		ldr	r0, .L27+36
 372 005a FFF7FEFF 		bl	HAL_UART_Receive_IT
 373              	.LVL32:
 173:Core/Src/main.c ****       }
 374              		.loc 1 173 11 view .LVU87
 173:Core/Src/main.c ****       }
 375              		.loc 1 173 24 is_stmt 0 view .LVU88
 376 005e 924B     		ldr	r3, .L27+40
 377 0060 1A68     		ldr	r2, [r3]
 378 0062 924B     		ldr	r3, .L27+44
 379 0064 1A60     		str	r2, [r3]
 380              	.L16:
 170:Core/Src/main.c ****       {
 381              		.loc 1 170 27 view .LVU89
 382 0066 914B     		ldr	r3, .L27+44
 383 0068 1B68     		ldr	r3, [r3]
 170:Core/Src/main.c ****       {
 384              		.loc 1 170 13 view .LVU90
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 16


 385 006a 002B     		cmp	r3, #0
 386 006c F2D0     		beq	.L17
 387 006e 91E0     		b	.L25
 388              	.L19:
 193:Core/Src/main.c ****         else {pitch.i = -5000;}
 389              		.loc 1 193 16 is_stmt 1 view .LVU91
 193:Core/Src/main.c ****         else {pitch.i = -5000;}
 390              		.loc 1 193 19 is_stmt 0 view .LVU92
 391 0070 002A     		cmp	r2, #0
 392 0072 04DD     		ble	.L21
 193:Core/Src/main.c ****         else {pitch.i = -5000;}
 393              		.loc 1 193 40 is_stmt 1 discriminator 1 view .LVU93
 193:Core/Src/main.c ****         else {pitch.i = -5000;}
 394              		.loc 1 193 48 is_stmt 0 discriminator 1 view .LVU94
 395 0074 8E4B     		ldr	r3, .L27+48
 396 0076 41F28832 		movw	r2, #5000
 397 007a DA60     		str	r2, [r3, #12]
 398 007c E3E0     		b	.L20
 399              	.L21:
 194:Core/Src/main.c ****         motor_speed.p = -(motor_left.current_speed + motor_right.current_speed)/2;
 400              		.loc 1 194 15 is_stmt 1 view .LVU95
 194:Core/Src/main.c ****         motor_speed.p = -(motor_left.current_speed + motor_right.current_speed)/2;
 401              		.loc 1 194 23 is_stmt 0 view .LVU96
 402 007e 8C4B     		ldr	r3, .L27+48
 403 0080 8C4A     		ldr	r2, .L27+52
 404 0082 DA60     		str	r2, [r3, #12]
 405 0084 DFE0     		b	.L20
 406              	.L22:
 198:Core/Src/main.c ****         else {motor_speed.i = -5000;}
 407              		.loc 1 198 16 is_stmt 1 view .LVU97
 198:Core/Src/main.c ****         else {motor_speed.i = -5000;}
 408              		.loc 1 198 19 is_stmt 0 view .LVU98
 409 0086 002B     		cmp	r3, #0
 410 0088 40F3F580 		ble	.L24
 198:Core/Src/main.c ****         else {motor_speed.i = -5000;}
 411              		.loc 1 198 52 is_stmt 1 discriminator 1 view .LVU99
 198:Core/Src/main.c ****         else {motor_speed.i = -5000;}
 412              		.loc 1 198 66 is_stmt 0 discriminator 1 view .LVU100
 413 008c 8A4B     		ldr	r3, .L27+56
 414 008e 41F28831 		movw	r1, #5000
 415 0092 D960     		str	r1, [r3, #12]
 416              	.L23:
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 417              		.loc 1 200 9 is_stmt 1 view .LVU101
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 418              		.loc 1 200 53 is_stmt 0 view .LVU102
 419 0094 884C     		ldr	r4, .L27+56
 420 0096 2568     		ldr	r5, [r4]
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 421              		.loc 1 200 40 view .LVU103
 422 0098 551B     		subs	r5, r2, r5
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 423              		.loc 1 200 64 view .LVU104
 424 009a FFF7FEFF 		bl	HAL_GetTick
 425              	.LVL33:
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 426              		.loc 1 200 77 view .LVU105
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 17


 427 009e 874E     		ldr	r6, .L27+60
 428 00a0 3368     		ldr	r3, [r6]
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 429              		.loc 1 200 88 view .LVU106
 430 00a2 C01A     		subs	r0, r0, r3
 431 00a4 FFF7FEFF 		bl	__aeabi_ui2d
 432              	.LVL34:
 433 00a8 75A3     		adr	r3, .L27
 434 00aa D3E90023 		ldrd	r2, [r3]
 435 00ae FFF7FEFF 		bl	__aeabi_dmul
 436              	.LVL35:
 437 00b2 8046     		mov	r8, r0
 438 00b4 8946     		mov	r9, r1
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 439              		.loc 1 200 61 view .LVU107
 440 00b6 2846     		mov	r0, r5
 441 00b8 FFF7FEFF 		bl	__aeabi_i2d
 442              	.LVL36:
 443 00bc 4246     		mov	r2, r8
 444 00be 4B46     		mov	r3, r9
 445 00c0 FFF7FEFF 		bl	__aeabi_ddiv
 446              	.LVL37:
 200:Core/Src/main.c ****         velo = 0.5*(4*(pitch.kp * pitch.p + pitch.ki * pitch.i + pitch.kd * pitch.d) + 1* (motor_sp
 447              		.loc 1 200 23 view .LVU108
 448 00c4 FFF7FEFF 		bl	__aeabi_d2iz
 449              	.LVL38:
 450 00c8 0746     		mov	r7, r0
 451 00ca 6061     		str	r0, [r4, #20]
 201:Core/Src/main.c ****         move(velo);
 452              		.loc 1 201 9 is_stmt 1 view .LVU109
 201:Core/Src/main.c ****         move(velo);
 453              		.loc 1 201 29 is_stmt 0 view .LVU110
 454 00cc 784D     		ldr	r5, .L27+48
 455 00ce D5F80880 		ldr	r8, [r5, #8]	@ float
 201:Core/Src/main.c ****         move(velo);
 456              		.loc 1 201 33 view .LVU111
 457 00d2 6868     		ldr	r0, [r5, #4]
 458 00d4 FFF7FEFF 		bl	__aeabi_i2f
 459              	.LVL39:
 460 00d8 4146     		mov	r1, r8
 461 00da FFF7FEFF 		bl	__aeabi_fmul
 462              	.LVL40:
 463 00de 8046     		mov	r8, r0
 201:Core/Src/main.c ****         move(velo);
 464              		.loc 1 201 50 view .LVU112
 465 00e0 D5F81090 		ldr	r9, [r5, #16]	@ float
 201:Core/Src/main.c ****         move(velo);
 466              		.loc 1 201 54 view .LVU113
 467 00e4 E868     		ldr	r0, [r5, #12]
 468 00e6 FFF7FEFF 		bl	__aeabi_i2f
 469              	.LVL41:
 470 00ea 4946     		mov	r1, r9
 471 00ec FFF7FEFF 		bl	__aeabi_fmul
 472              	.LVL42:
 201:Core/Src/main.c ****         move(velo);
 473              		.loc 1 201 43 view .LVU114
 474 00f0 0146     		mov	r1, r0
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 18


 475 00f2 4046     		mov	r0, r8
 476 00f4 FFF7FEFF 		bl	__aeabi_fadd
 477              	.LVL43:
 478 00f8 8046     		mov	r8, r0
 201:Core/Src/main.c ****         move(velo);
 479              		.loc 1 201 71 view .LVU115
 480 00fa D5F81890 		ldr	r9, [r5, #24]	@ float
 201:Core/Src/main.c ****         move(velo);
 481              		.loc 1 201 75 view .LVU116
 482 00fe 6869     		ldr	r0, [r5, #20]
 483 0100 FFF7FEFF 		bl	__aeabi_i2f
 484              	.LVL44:
 485 0104 4946     		mov	r1, r9
 486 0106 FFF7FEFF 		bl	__aeabi_fmul
 487              	.LVL45:
 201:Core/Src/main.c ****         move(velo);
 488              		.loc 1 201 64 view .LVU117
 489 010a 0146     		mov	r1, r0
 490 010c 4046     		mov	r0, r8
 491 010e FFF7FEFF 		bl	__aeabi_fadd
 492              	.LVL46:
 201:Core/Src/main.c ****         move(velo);
 493              		.loc 1 201 22 view .LVU118
 494 0112 4FF08141 		mov	r1, #1082130432
 495 0116 FFF7FEFF 		bl	__aeabi_fmul
 496              	.LVL47:
 497 011a 8046     		mov	r8, r0
 201:Core/Src/main.c ****         move(velo);
 498              		.loc 1 201 103 view .LVU119
 499 011c D4F80890 		ldr	r9, [r4, #8]	@ float
 201:Core/Src/main.c ****         move(velo);
 500              		.loc 1 201 107 view .LVU120
 501 0120 6068     		ldr	r0, [r4, #4]
 502 0122 FFF7FEFF 		bl	__aeabi_i2f
 503              	.LVL48:
 504 0126 4946     		mov	r1, r9
 505 0128 FFF7FEFF 		bl	__aeabi_fmul
 506              	.LVL49:
 507 012c 8146     		mov	r9, r0
 201:Core/Src/main.c ****         move(velo);
 508              		.loc 1 201 136 view .LVU121
 509 012e D4F810A0 		ldr	r10, [r4, #16]	@ float
 201:Core/Src/main.c ****         move(velo);
 510              		.loc 1 201 140 view .LVU122
 511 0132 E068     		ldr	r0, [r4, #12]
 512 0134 FFF7FEFF 		bl	__aeabi_i2f
 513              	.LVL50:
 514 0138 5146     		mov	r1, r10
 515 013a FFF7FEFF 		bl	__aeabi_fmul
 516              	.LVL51:
 201:Core/Src/main.c ****         move(velo);
 517              		.loc 1 201 123 view .LVU123
 518 013e 0146     		mov	r1, r0
 519 0140 4846     		mov	r0, r9
 520 0142 FFF7FEFF 		bl	__aeabi_fadd
 521              	.LVL52:
 522 0146 8146     		mov	r9, r0
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 19


 201:Core/Src/main.c ****         move(velo);
 523              		.loc 1 201 169 view .LVU124
 524 0148 D4F818A0 		ldr	r10, [r4, #24]	@ float
 201:Core/Src/main.c ****         move(velo);
 525              		.loc 1 201 173 view .LVU125
 526 014c 3846     		mov	r0, r7
 527 014e FFF7FEFF 		bl	__aeabi_i2f
 528              	.LVL53:
 529 0152 5146     		mov	r1, r10
 530 0154 FFF7FEFF 		bl	__aeabi_fmul
 531              	.LVL54:
 201:Core/Src/main.c ****         move(velo);
 532              		.loc 1 201 89 view .LVU126
 533 0158 0146     		mov	r1, r0
 534 015a 4846     		mov	r0, r9
 535 015c FFF7FEFF 		bl	__aeabi_fadd
 536              	.LVL55:
 201:Core/Src/main.c ****         move(velo);
 537              		.loc 1 201 86 view .LVU127
 538 0160 0146     		mov	r1, r0
 539 0162 4046     		mov	r0, r8
 540 0164 FFF7FEFF 		bl	__aeabi_fadd
 541              	.LVL56:
 542 0168 FFF7FEFF 		bl	__aeabi_f2d
 543              	.LVL57:
 201:Core/Src/main.c ****         move(velo);
 544              		.loc 1 201 19 view .LVU128
 545 016c 0022     		movs	r2, #0
 546 016e 544B     		ldr	r3, .L27+64
 547 0170 FFF7FEFF 		bl	__aeabi_dmul
 548              	.LVL58:
 201:Core/Src/main.c ****         move(velo);
 549              		.loc 1 201 14 view .LVU129
 550 0174 FFF7FEFF 		bl	__aeabi_d2iz
 551              	.LVL59:
 552 0178 524B     		ldr	r3, .L27+68
 553 017a 1860     		str	r0, [r3]
 202:Core/Src/main.c ****         pitch.last_p = pitch.p;
 554              		.loc 1 202 9 is_stmt 1 view .LVU130
 555 017c FFF7FEFF 		bl	move
 556              	.LVL60:
 203:Core/Src/main.c ****         motor_speed.last_p = motor_speed.p;
 557              		.loc 1 203 9 view .LVU131
 203:Core/Src/main.c ****         motor_speed.last_p = motor_speed.p;
 558              		.loc 1 203 29 is_stmt 0 view .LVU132
 559 0180 6B68     		ldr	r3, [r5, #4]
 203:Core/Src/main.c ****         motor_speed.last_p = motor_speed.p;
 560              		.loc 1 203 22 view .LVU133
 561 0182 2B60     		str	r3, [r5]
 204:Core/Src/main.c ****         last_tick = HAL_GetTick();
 562              		.loc 1 204 9 is_stmt 1 view .LVU134
 204:Core/Src/main.c ****         last_tick = HAL_GetTick();
 563              		.loc 1 204 41 is_stmt 0 view .LVU135
 564 0184 6368     		ldr	r3, [r4, #4]
 204:Core/Src/main.c ****         last_tick = HAL_GetTick();
 565              		.loc 1 204 28 view .LVU136
 566 0186 2360     		str	r3, [r4]
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 20


 205:Core/Src/main.c ****         HAL_Delay(5);
 567              		.loc 1 205 9 is_stmt 1 view .LVU137
 205:Core/Src/main.c ****         HAL_Delay(5);
 568              		.loc 1 205 21 is_stmt 0 view .LVU138
 569 0188 FFF7FEFF 		bl	HAL_GetTick
 570              	.LVL61:
 205:Core/Src/main.c ****         HAL_Delay(5);
 571              		.loc 1 205 19 view .LVU139
 572 018c 3060     		str	r0, [r6]
 206:Core/Src/main.c ****       }
 573              		.loc 1 206 9 is_stmt 1 view .LVU140
 574 018e 0520     		movs	r0, #5
 575 0190 FFF7FEFF 		bl	HAL_Delay
 576              	.LVL62:
 577              	.L25:
 175:Core/Src/main.c ****         //encode start
 578              		.loc 1 175 7 view .LVU141
 177:Core/Src/main.c ****         motor_left.current_speed = motor_left.encoder_val - motor_left.encoder_last_val;
 579              		.loc 1 177 9 view .LVU142
 177:Core/Src/main.c ****         motor_left.current_speed = motor_left.encoder_val - motor_left.encoder_last_val;
 580              		.loc 1 177 34 is_stmt 0 view .LVU143
 581 0194 3F4B     		ldr	r3, .L27+20
 582 0196 1B68     		ldr	r3, [r3]
 583 0198 5A6A     		ldr	r2, [r3, #36]
 177:Core/Src/main.c ****         motor_left.current_speed = motor_left.encoder_val - motor_left.encoder_last_val;
 584              		.loc 1 177 32 view .LVU144
 585 019a 4B4B     		ldr	r3, .L27+72
 586 019c 1A60     		str	r2, [r3]
 178:Core/Src/main.c ****         motor_left.encoder_last_val = motor_left.encoder_val;
 587              		.loc 1 178 9 is_stmt 1 view .LVU145
 178:Core/Src/main.c ****         motor_left.encoder_last_val = motor_left.encoder_val;
 588              		.loc 1 178 71 is_stmt 0 view .LVU146
 589 019e D968     		ldr	r1, [r3, #12]
 178:Core/Src/main.c ****         motor_left.encoder_last_val = motor_left.encoder_val;
 590              		.loc 1 178 59 view .LVU147
 591 01a0 511A     		subs	r1, r2, r1
 178:Core/Src/main.c ****         motor_left.encoder_last_val = motor_left.encoder_val;
 592              		.loc 1 178 34 view .LVU148
 593 01a2 9960     		str	r1, [r3, #8]
 179:Core/Src/main.c ****         motor_right.encoder_val = __HAL_TIM_GET_COUNTER(&htim3);
 594              		.loc 1 179 9 is_stmt 1 view .LVU149
 179:Core/Src/main.c ****         motor_right.encoder_val = __HAL_TIM_GET_COUNTER(&htim3);
 595              		.loc 1 179 37 is_stmt 0 view .LVU150
 596 01a4 DA60     		str	r2, [r3, #12]
 180:Core/Src/main.c ****         motor_right.current_speed = motor_right.encoder_val - motor_right.encoder_last_val;
 597              		.loc 1 180 9 is_stmt 1 view .LVU151
 180:Core/Src/main.c ****         motor_right.current_speed = motor_right.encoder_val - motor_right.encoder_last_val;
 598              		.loc 1 180 35 is_stmt 0 view .LVU152
 599 01a6 3C4B     		ldr	r3, .L27+24
 600 01a8 1B68     		ldr	r3, [r3]
 601 01aa 5A6A     		ldr	r2, [r3, #36]
 180:Core/Src/main.c ****         motor_right.current_speed = motor_right.encoder_val - motor_right.encoder_last_val;
 602              		.loc 1 180 33 view .LVU153
 603 01ac 474B     		ldr	r3, .L27+76
 604 01ae 1A60     		str	r2, [r3]
 181:Core/Src/main.c ****         motor_right.encoder_last_val = motor_right.encoder_val;
 605              		.loc 1 181 9 is_stmt 1 view .LVU154
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 21


 181:Core/Src/main.c ****         motor_right.encoder_last_val = motor_right.encoder_val;
 606              		.loc 1 181 74 is_stmt 0 view .LVU155
 607 01b0 D968     		ldr	r1, [r3, #12]
 181:Core/Src/main.c ****         motor_right.encoder_last_val = motor_right.encoder_val;
 608              		.loc 1 181 61 view .LVU156
 609 01b2 511A     		subs	r1, r2, r1
 181:Core/Src/main.c ****         motor_right.encoder_last_val = motor_right.encoder_val;
 610              		.loc 1 181 35 view .LVU157
 611 01b4 9960     		str	r1, [r3, #8]
 182:Core/Src/main.c ****         //encoder end
 612              		.loc 1 182 9 is_stmt 1 view .LVU158
 182:Core/Src/main.c ****         //encoder end
 613              		.loc 1 182 38 is_stmt 0 view .LVU159
 614 01b6 DA60     		str	r2, [r3, #12]
 184:Core/Src/main.c ****         pitch_corrected = pitch_angle-pitch_offset;
 615              		.loc 1 184 9 is_stmt 1 view .LVU160
 616 01b8 0822     		movs	r2, #8
 617 01ba 3949     		ldr	r1, .L27+32
 618 01bc 3948     		ldr	r0, .L27+36
 619 01be FFF7FEFF 		bl	HAL_UART_Receive_IT
 620              	.LVL63:
 185:Core/Src/main.c ****         if (pitch_corrected > (33000)) {pitch_corrected -= 66000;}
 621              		.loc 1 185 9 view .LVU161
 185:Core/Src/main.c ****         if (pitch_corrected > (33000)) {pitch_corrected -= 66000;}
 622              		.loc 1 185 38 is_stmt 0 view .LVU162
 623 01c2 394B     		ldr	r3, .L27+40
 624 01c4 1B68     		ldr	r3, [r3]
 625 01c6 394A     		ldr	r2, .L27+44
 626 01c8 1268     		ldr	r2, [r2]
 627 01ca 9B1A     		subs	r3, r3, r2
 185:Core/Src/main.c ****         if (pitch_corrected > (33000)) {pitch_corrected -= 66000;}
 628              		.loc 1 185 25 view .LVU163
 629 01cc 404A     		ldr	r2, .L27+80
 630 01ce 1360     		str	r3, [r2]
 186:Core/Src/main.c ****         pitch.p = pitch_corrected;
 631              		.loc 1 186 9 is_stmt 1 view .LVU164
 186:Core/Src/main.c ****         pitch.p = pitch_corrected;
 632              		.loc 1 186 12 is_stmt 0 view .LVU165
 633 01d0 48F2E802 		movw	r2, #33000
 634 01d4 9342     		cmp	r3, r2
 635 01d6 05DD     		ble	.L18
 186:Core/Src/main.c ****         pitch.p = pitch_corrected;
 636              		.loc 1 186 41 is_stmt 1 discriminator 1 view .LVU166
 186:Core/Src/main.c ****         pitch.p = pitch_corrected;
 637              		.loc 1 186 57 is_stmt 0 discriminator 1 view .LVU167
 638 01d8 A3F58033 		sub	r3, r3, #65536
 639 01dc A3F5E873 		sub	r3, r3, #464
 640 01e0 3B4A     		ldr	r2, .L27+80
 641 01e2 1360     		str	r3, [r2]
 642              	.L18:
 187:Core/Src/main.c ****         pitch_p_diff = pitch.p - pitch.last_p;
 643              		.loc 1 187 9 is_stmt 1 view .LVU168
 187:Core/Src/main.c ****         pitch_p_diff = pitch.p - pitch.last_p;
 644              		.loc 1 187 17 is_stmt 0 view .LVU169
 645 01e4 3A4B     		ldr	r3, .L27+80
 646 01e6 1B68     		ldr	r3, [r3]
 647 01e8 314C     		ldr	r4, .L27+48
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 22


 648 01ea 6360     		str	r3, [r4, #4]
 188:Core/Src/main.c ****         time_diff = HAL_GetTick() - last_tick;
 649              		.loc 1 188 9 is_stmt 1 view .LVU170
 188:Core/Src/main.c ****         time_diff = HAL_GetTick() - last_tick;
 650              		.loc 1 188 39 is_stmt 0 view .LVU171
 651 01ec 2268     		ldr	r2, [r4]
 188:Core/Src/main.c ****         time_diff = HAL_GetTick() - last_tick;
 652              		.loc 1 188 32 view .LVU172
 653 01ee 9B1A     		subs	r3, r3, r2
 188:Core/Src/main.c ****         time_diff = HAL_GetTick() - last_tick;
 654              		.loc 1 188 22 view .LVU173
 655 01f0 384A     		ldr	r2, .L27+84
 656 01f2 1360     		str	r3, [r2]
 189:Core/Src/main.c ****         pitch.d = (pitch.p - pitch.last_p)/*/((HAL_GetTick() - last_tick)*0.001)*/;
 657              		.loc 1 189 9 is_stmt 1 view .LVU174
 189:Core/Src/main.c ****         pitch.d = (pitch.p - pitch.last_p)/*/((HAL_GetTick() - last_tick)*0.001)*/;
 658              		.loc 1 189 21 is_stmt 0 view .LVU175
 659 01f4 FFF7FEFF 		bl	HAL_GetTick
 660              	.LVL64:
 189:Core/Src/main.c ****         pitch.d = (pitch.p - pitch.last_p)/*/((HAL_GetTick() - last_tick)*0.001)*/;
 661              		.loc 1 189 35 view .LVU176
 662 01f8 304B     		ldr	r3, .L27+60
 663 01fa 1B68     		ldr	r3, [r3]
 664 01fc C01A     		subs	r0, r0, r3
 189:Core/Src/main.c ****         pitch.d = (pitch.p - pitch.last_p)/*/((HAL_GetTick() - last_tick)*0.001)*/;
 665              		.loc 1 189 19 view .LVU177
 666 01fe 364B     		ldr	r3, .L27+88
 667 0200 1860     		str	r0, [r3]
 190:Core/Src/main.c ****         if (pitch.i+pitch.p<=5000 && pitch.i+pitch.p>=-5000) {
 668              		.loc 1 190 9 is_stmt 1 view .LVU178
 190:Core/Src/main.c ****         if (pitch.i+pitch.p<=5000 && pitch.i+pitch.p>=-5000) {
 669              		.loc 1 190 25 is_stmt 0 view .LVU179
 670 0202 6068     		ldr	r0, [r4, #4]
 190:Core/Src/main.c ****         if (pitch.i+pitch.p<=5000 && pitch.i+pitch.p>=-5000) {
 671              		.loc 1 190 35 view .LVU180
 672 0204 2368     		ldr	r3, [r4]
 190:Core/Src/main.c ****         if (pitch.i+pitch.p<=5000 && pitch.i+pitch.p>=-5000) {
 673              		.loc 1 190 28 view .LVU181
 674 0206 C31A     		subs	r3, r0, r3
 190:Core/Src/main.c ****         if (pitch.i+pitch.p<=5000 && pitch.i+pitch.p>=-5000) {
 675              		.loc 1 190 17 view .LVU182
 676 0208 6361     		str	r3, [r4, #20]
 191:Core/Src/main.c ****           pitch.i += pitch.p*0.05;
 677              		.loc 1 191 9 is_stmt 1 view .LVU183
 191:Core/Src/main.c ****           pitch.i += pitch.p*0.05;
 678              		.loc 1 191 18 is_stmt 0 view .LVU184
 679 020a E468     		ldr	r4, [r4, #12]
 191:Core/Src/main.c ****           pitch.i += pitch.p*0.05;
 680              		.loc 1 191 20 view .LVU185
 681 020c 0219     		adds	r2, r0, r4
 191:Core/Src/main.c ****           pitch.i += pitch.p*0.05;
 682              		.loc 1 191 35 view .LVU186
 683 020e 02F59C53 		add	r3, r2, #4992
 684 0212 0833     		adds	r3, r3, #8
 191:Core/Src/main.c ****           pitch.i += pitch.p*0.05;
 685              		.loc 1 191 12 view .LVU187
 686 0214 42F21071 		movw	r1, #10000
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 23


 687 0218 8B42     		cmp	r3, r1
 688 021a 3FF629AF 		bhi	.L19
 192:Core/Src/main.c ****         } else if (pitch.i+pitch.p>0) {pitch.i = 5000;}
 689              		.loc 1 192 11 is_stmt 1 view .LVU188
 192:Core/Src/main.c ****         } else if (pitch.i+pitch.p>0) {pitch.i = 5000;}
 690              		.loc 1 192 29 is_stmt 0 view .LVU189
 691 021e FFF7FEFF 		bl	__aeabi_i2d
 692              	.LVL65:
 693 0222 19A3     		adr	r3, .L27+8
 694 0224 D3E90023 		ldrd	r2, [r3]
 695 0228 FFF7FEFF 		bl	__aeabi_dmul
 696              	.LVL66:
 697 022c 0646     		mov	r6, r0
 698 022e 0F46     		mov	r7, r1
 192:Core/Src/main.c ****         } else if (pitch.i+pitch.p>0) {pitch.i = 5000;}
 699              		.loc 1 192 19 view .LVU190
 700 0230 2046     		mov	r0, r4
 701 0232 FFF7FEFF 		bl	__aeabi_i2d
 702              	.LVL67:
 703 0236 3246     		mov	r2, r6
 704 0238 3B46     		mov	r3, r7
 705 023a FFF7FEFF 		bl	__aeabi_dadd
 706              	.LVL68:
 707 023e FFF7FEFF 		bl	__aeabi_d2iz
 708              	.LVL69:
 709 0242 1B4B     		ldr	r3, .L27+48
 710 0244 D860     		str	r0, [r3, #12]
 711              	.L20:
 195:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 712              		.loc 1 195 9 is_stmt 1 view .LVU191
 195:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 713              		.loc 1 195 37 is_stmt 0 view .LVU192
 714 0246 204B     		ldr	r3, .L27+72
 715 0248 9B68     		ldr	r3, [r3, #8]
 195:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 716              		.loc 1 195 65 view .LVU193
 717 024a 204A     		ldr	r2, .L27+76
 718 024c 9268     		ldr	r2, [r2, #8]
 195:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 719              		.loc 1 195 52 view .LVU194
 720 024e 1344     		add	r3, r3, r2
 195:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 721              		.loc 1 195 80 view .LVU195
 722 0250 03EBD373 		add	r3, r3, r3, lsr #31
 723 0254 5B10     		asrs	r3, r3, #1
 724 0256 5A42     		rsbs	r2, r3, #0
 195:Core/Src/main.c ****         if (motor_speed.i+motor_speed.p<=5000 && motor_speed.i+motor_speed.p>=-5000) {
 725              		.loc 1 195 23 view .LVU196
 726 0258 174B     		ldr	r3, .L27+56
 727 025a 5A60     		str	r2, [r3, #4]
 196:Core/Src/main.c ****           motor_speed.i += motor_speed.p;
 728              		.loc 1 196 9 is_stmt 1 view .LVU197
 196:Core/Src/main.c ****           motor_speed.i += motor_speed.p;
 729              		.loc 1 196 24 is_stmt 0 view .LVU198
 730 025c DB68     		ldr	r3, [r3, #12]
 196:Core/Src/main.c ****           motor_speed.i += motor_speed.p;
 731              		.loc 1 196 26 view .LVU199
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 24


 732 025e 1344     		add	r3, r3, r2
 196:Core/Src/main.c ****           motor_speed.i += motor_speed.p;
 733              		.loc 1 196 47 view .LVU200
 734 0260 03F59C51 		add	r1, r3, #4992
 735 0264 0831     		adds	r1, r1, #8
 196:Core/Src/main.c ****           motor_speed.i += motor_speed.p;
 736              		.loc 1 196 12 view .LVU201
 737 0266 42F21070 		movw	r0, #10000
 738 026a 8142     		cmp	r1, r0
 739 026c 3FF60BAF 		bhi	.L22
 197:Core/Src/main.c ****         } else if (motor_speed.i+motor_speed.p>0) {motor_speed.i = 5000;}
 740              		.loc 1 197 11 is_stmt 1 view .LVU202
 197:Core/Src/main.c ****         } else if (motor_speed.i+motor_speed.p>0) {motor_speed.i = 5000;}
 741              		.loc 1 197 25 is_stmt 0 view .LVU203
 742 0270 1149     		ldr	r1, .L27+56
 743 0272 CB60     		str	r3, [r1, #12]
 744 0274 0EE7     		b	.L23
 745              	.L24:
 199:Core/Src/main.c ****         motor_speed.d = (motor_speed.p - motor_speed.last_p)/((HAL_GetTick()-last_tick)*0.001);
 746              		.loc 1 199 15 is_stmt 1 view .LVU204
 199:Core/Src/main.c ****         motor_speed.d = (motor_speed.p - motor_speed.last_p)/((HAL_GetTick()-last_tick)*0.001);
 747              		.loc 1 199 29 is_stmt 0 view .LVU205
 748 0276 104B     		ldr	r3, .L27+56
 749 0278 0E49     		ldr	r1, .L27+52
 750 027a D960     		str	r1, [r3, #12]
 751 027c 0AE7     		b	.L23
 752              	.L28:
 753 027e 00BF     		.align	3
 754              	.L27:
 755 0280 FCA9F1D2 		.word	3539053052
 756 0284 4D62503F 		.word	1062232653
 757 0288 9A999999 		.word	2576980378
 758 028c 9999A93F 		.word	1068079513
 759 0290 00000000 		.word	htim1
 760 0294 00000000 		.word	htim2
 761 0298 00000000 		.word	htim3
 762 029c 00000000 		.word	htim4
 763 02a0 00000000 		.word	uartdata
 764 02a4 00000000 		.word	huart2
 765 02a8 00000000 		.word	.LANCHOR1
 766 02ac 00000000 		.word	.LANCHOR0
 767 02b0 00000000 		.word	.LANCHOR3
 768 02b4 78ECFFFF 		.word	-5000
 769 02b8 00000000 		.word	.LANCHOR7
 770 02bc 00000000 		.word	.LANCHOR5
 771 02c0 0000E03F 		.word	1071644672
 772 02c4 00000000 		.word	.LANCHOR8
 773 02c8 00000000 		.word	motor_left
 774 02cc 00000000 		.word	motor_right
 775 02d0 00000000 		.word	.LANCHOR2
 776 02d4 00000000 		.word	.LANCHOR4
 777 02d8 00000000 		.word	.LANCHOR6
 778              		.cfi_endproc
 779              	.LFE66:
 781              		.global	velo
 782              		.global	motor_speed
 783              		.global	pitch
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 25


 784              		.comm	motor_right,16,4
 785              		.comm	motor_left,16,4
 786              		.global	time_diff
 787              		.global	pitch_offset
 788              		.global	pitch_p_diff
 789              		.global	pitch_corrected
 790              		.global	pitch_angle
 791              		.global	last_tick
 792              		.comm	uartdata,8,4
 793              		.section	.bss.last_tick,"aw",%nobits
 794              		.align	2
 795              		.set	.LANCHOR5,. + 0
 798              	last_tick:
 799 0000 00000000 		.space	4
 800              		.section	.bss.pitch_angle,"aw",%nobits
 801              		.align	2
 802              		.set	.LANCHOR1,. + 0
 805              	pitch_angle:
 806 0000 00000000 		.space	4
 807              		.section	.bss.pitch_corrected,"aw",%nobits
 808              		.align	2
 809              		.set	.LANCHOR2,. + 0
 812              	pitch_corrected:
 813 0000 00000000 		.space	4
 814              		.section	.bss.pitch_offset,"aw",%nobits
 815              		.align	2
 816              		.set	.LANCHOR0,. + 0
 819              	pitch_offset:
 820 0000 00000000 		.space	4
 821              		.section	.bss.pitch_p_diff,"aw",%nobits
 822              		.align	2
 823              		.set	.LANCHOR4,. + 0
 826              	pitch_p_diff:
 827 0000 00000000 		.space	4
 828              		.section	.bss.time_diff,"aw",%nobits
 829              		.align	2
 830              		.set	.LANCHOR6,. + 0
 833              	time_diff:
 834 0000 00000000 		.space	4
 835              		.section	.bss.velo,"aw",%nobits
 836              		.align	2
 837              		.set	.LANCHOR8,. + 0
 840              	velo:
 841 0000 00000000 		.space	4
 842              		.section	.data.motor_speed,"aw"
 843              		.align	2
 844              		.set	.LANCHOR7,. + 0
 847              	motor_speed:
 848 0000 00000000 		.word	0
 849 0004 00000000 		.space	4
 850 0008 00002042 		.word	1109393408
 851 000c 00000000 		.word	0
 852 0010 A69BC43B 		.word	1002740646
 853 0014 00000000 		.space	4
 854 0018 0000803F 		.word	1065353216
 855              		.section	.data.pitch,"aw"
 856              		.align	2
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 26


 857              		.set	.LANCHOR3,. + 0
 860              	pitch:
 861 0000 00000000 		.word	0
 862 0004 00000000 		.space	4
 863 0008 295C0F3E 		.word	1041194025
 864 000c 00000000 		.word	0
 865 0010 00000000 		.word	0
 866 0014 00000000 		.space	4
 867 0018 00004843 		.word	1128792064
 868              		.text
 869              	.Letext0:
 870              		.file 3 "/Users/cecilia/Downloads/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine
 871              		.file 4 "/Users/cecilia/Downloads/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_st
 872              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 873              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 874              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 875              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 876              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 877              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 878              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 879              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 880              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 881              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 882              		.file 15 "Core/Inc/tim.h"
 883              		.file 16 "Core/Inc/usart.h"
 884              		.file 17 "Core/Inc/gpio.h"
 885              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:16     .text.move:0000000000000000 $t
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:24     .text.move:0000000000000000 move
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:126    .text.move:0000000000000074 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:132    .text.Error_Handler:0000000000000000 $t
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:139    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:170    .text.SystemClock_Config:0000000000000000 $t
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:177    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:291    .text.main:0000000000000000 $t
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:298    .text.main:0000000000000000 main
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:755    .text.main:0000000000000280 $d
                            *COM*:0000000000000008 uartdata
                            *COM*:0000000000000010 motor_left
                            *COM*:0000000000000010 motor_right
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:840    .bss.velo:0000000000000000 velo
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:847    .data.motor_speed:0000000000000000 motor_speed
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:860    .data.pitch:0000000000000000 pitch
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:833    .bss.time_diff:0000000000000000 time_diff
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:819    .bss.pitch_offset:0000000000000000 pitch_offset
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:826    .bss.pitch_p_diff:0000000000000000 pitch_p_diff
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:812    .bss.pitch_corrected:0000000000000000 pitch_corrected
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:805    .bss.pitch_angle:0000000000000000 pitch_angle
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:798    .bss.last_tick:0000000000000000 last_tick
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:794    .bss.last_tick:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:801    .bss.pitch_angle:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:808    .bss.pitch_corrected:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:815    .bss.pitch_offset:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:822    .bss.pitch_p_diff:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:829    .bss.time_diff:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:836    .bss.velo:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:843    .data.motor_speed:0000000000000000 $d
/var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s:856    .data.pitch:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2f
__aeabi_fmul
__aeabi_fadd
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_USART2_UART_Init
MX_TIM4_Init
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
ARM GAS  /var/folders/fr/_fzkl2b500x6jnd03zkv75240000gn/T//cc1Yv2Du.s 			page 28


HAL_TIM_Base_Start_IT
HAL_Delay
HAL_UART_Receive_IT
HAL_GetTick
htim1
htim2
htim3
htim4
huart2
